{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documenta\u00e7\u00e3o - Data Quality","text":"<pre><code>graph TD;\nA[Configura Vari\u00e1veis] --&gt; B[Ler o Banco SQL];\nB --&gt;|Sucesso| V[Valida\u00e7\u00e3o do Schema de Entrada];\nV --&gt;|Falha| X[Alerta de Erro];\nV --&gt;|Sucesso| C[Transformar os KPIs];\nC --&gt; Y[Valida\u00e7\u00e3o do Schema de Sa\u00edda];\nY --&gt;|Falha| Z[Alerta de Erro];\nY --&gt;|Sucesso| D[Salvar no DuckDB];\n</code></pre>"},{"location":"#contrato-de-dados","title":"Contrato de dados","text":"<p>               Bases: <code>SchemaModel</code></p> <p>Esquema de valida\u00e7\u00e3o para um DataFrame de produtos.</p> <p>Attributes:</p> Name Type Description <code>id_produto</code> <code>int</code> <p>Identificador \u00fanico do produto.</p> <code>nome</code> <code>str</code> <p>Nome do produto.</p> <code>quantidade</code> <code>int</code> <p>Quantidade em estoque do produto. Deve ser no m\u00ednimo 20 e no m\u00e1ximo 200.</p> <code>preco</code> <code>float</code> <p>Pre\u00e7o do produto. Deve ser maior que 0, sem limite m\u00e1ximo.</p> <code>categoria</code> <code>str</code> <p>Categoria \u00e0 qual o produto pertence.</p> Source code in <code>app\\schemas.py</code> <pre><code>class ProdutoSchema(pa.SchemaModel):\n    \"\"\"\n    Esquema de valida\u00e7\u00e3o para um DataFrame de produtos.\n\n    Attributes:\n        id_produto (int): Identificador \u00fanico do produto.\n        nome (str): Nome do produto.\n        quantidade (int): Quantidade em estoque do produto. Deve ser no m\u00ednimo 20 e no m\u00e1ximo 200.\n        preco (float): Pre\u00e7o do produto. Deve ser maior que 0, sem limite m\u00e1ximo.\n        categoria (str): Categoria \u00e0 qual o produto pertence.\n    \"\"\"\n\n    id_produto: Series[int] = pa.Field(ge=0, description=\"Identificador \u00fanico do produto (sem limite m\u00e1ximo).\")\n    nome: Series[str] = pa.Field(nullable=False, description=\"Nome do produto.\")\n    quantidade: Series[int] = pa.Field(ge=20, le=200, description=\"Quantidade em estoque (20 a 200).\")\n    preco: Series[float] = pa.Field(ge=0.01, description=\"Pre\u00e7o do produto (deve ser maior que 0).\")\n    categoria: Series[str] = pa.Field(nullable=False, description=\"Categoria do produto.\")\n\n    class Config:\n        coerce = True  # For\u00e7a a convers\u00e3o dos tipos\n        strict = True  # Garante que apenas colunas definidas no schema sejam aceitas\n</code></pre>"}]}